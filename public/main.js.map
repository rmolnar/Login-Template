{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/guards/loggedin.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n\\t<flash-messages></flash-messages>\\n\\t<router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","// Import modules\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\n\n// Import components\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\n\n// Import services and guards\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service';\nimport { AuthGuard } from './guards/auth.guard';\nimport { LoggedInGuard } from './guards/loggedin.guard';\n\n\n// Declare routes\nconst appRoutes: Routes = [\n  {path:'', component: HomeComponent},\n  {path:'register', component: RegisterComponent, canActivate:[LoggedInGuard]},\n  {path:'login', component: LoginComponent, canActivate:[LoggedInGuard]},\n  {path:'dashboard', component: DashboardComponent, canActivate:[AuthGuard]},\n  {path:'profile', component: ProfileComponent, canActivate:[AuthGuard]}\n]\n\n\n// Configure the injector and compiler and help organize related things together.\n@NgModule({\n\n  // State what components and directives belong to NgModule\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent\n  ],\n\n  // Declare what modules NgModule uses\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    FormsModule,\n    FlashMessagesModule.forRoot(),\n    HttpClientModule,\n    HttpModule\n  ],\n\n  // Declare what services and guards are provided to NgModule\n  providers: [ValidateService, AuthService, AuthGuard, LoggedInGuard],\n  bootstrap: [AppComponent]\n})\n\n\nexport class AppModule { }\n\nexport function tokenGetter() {\n  return localStorage.getItem('access_token');\n}\n","module.exports = \"h2 {\\r\\n\\tcolor: white;\\r\\n}\\r\\n\\r\\n.link {\\r\\n\\tcolor: white;\\r\\n}\"","module.exports = \"<h2>\\n\\tHello, {{user.username}}!\\n</h2>\\n<p>\\n\\tThis is your dashboard. There is nothing here! That's because this login system is application agnostic. The \\\"dashboard\\\" serves as a placeholder for whatever service your application will deliver and needs to be protected by a user authentication system.<br/><br/> If you are reading this, thanks for examining my application. Follow me on <a href=\\\"https://twitter.com/ricky_molnar\\\" class=\\\"link\\\">Twitter</a>!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\n\n\nexport class DashboardComponent implements OnInit {\n\n\tuser: Object;\n\n  constructor(\n  \tprivate authService: AuthService,\n  \tprivate router: Router\n  \t) { }\n\n  ngOnInit() {\n  \tthis.authService.getProfile().subscribe(profile => {\n  \t\tthis.user = (profile as any).user;\n  \t},\n  \terr => {\n  \t\tconsole.log(err);\n  \t\treturn false;\n  \t});\n  }\n\n}\n","module.exports = \".lead {\\r\\n\\tcolor: black;\\r\\n}\\r\\n\\r\\n.list-group-item-primary {\\r\\n\\tbackground-color: #fff;\\r\\n}\\r\\n\\r\\n.list-group-item-secondary {\\r\\n\\tbackground-color: #eee;\\r\\n}\\r\\n\\r\\n#timeline-title {\\r\\n\\tpadding-top: 30px;\\r\\n}\\r\\n\\r\\n.timeline-list {\\r\\n\\tlist-style-position: inside;\\r\\n}\\r\\n\\r\\n.timeline-list a {\\r\\n\\tcolor: darkslategray;\\r\\n\\ttext-decoration: underline;\\r\\n}\\r\\n\\r\\n#register-invite {\\r\\n\\tpadding-top: 20px;\\r\\n\\tcolor: black;\\r\\n}\\r\\n\\r\\n.btn {\\r\\n\\tmargin-left: 10px;\\r\\n\\tmargin-right: 10px;\\r\\n\\twidth: 160px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"jumbotron text-center\\\">\\n\\t<h1>Welcome to the login system!</h1>\\n\\t<p class=\\\"lead\\\">Welcome to the login system that I built from scratch as a template that can be forked and used for any website that requires a login system. This single page web application was built using the MEAN stack (Angular 6) with Bootstrap.</p>\\n\\t\\n\\t<h5>What is a \\\"single page web application\\\"?</h5>\\n\\t<p>First off, a website and a web application are not the same thing, although the line between them can sometimes be quite blurry. A website displays data for the user and is defined by its content while a web application is much more complex and dynamic and is defined by its interaction with the user. Examples of websites include blogs or news sites while examples of web applications include social media or online calendars. This login system was created to serve as a starting point for building robust and scalable web applications.</p>\\n\\t<p>As you navigate around the application, you will notice that no new pages are ever loaded. Although the url in the address bar might change, there are no requests to load a new document from the server or to refresh a page. This is the beauty of a single page application! Navigating through the application and retrieving data from the server is virtually instantaneous as resources are dynamically loaded and added to the current page as necessary. This efficient method of delivering user experiences requires live communication with the backend web server and database, making it much more complex than a normal website.</p>\\n\\n\\n\\t<h5>What is the MEAN stack?</h5>\\n\\n\\t<blockquote class=\\\"blockquote\\\">\\n  \\t\\t<p class=\\\"mb-0\\\"><em>\\\"MEAN is a free and open-source JavaScript software stack for building dynamic web sites and web applications.<br/>\\n\\t\\t\\tThe MEAN stack is MongoDB, Express.js, AngularJS (or Angular), and Node.js. Because all components of the MEAN stack support programs are written in JavaScript, MEAN applications can be written in one language for both server-side and client-side execution environments.\\\"</em></p>\\n  \\t\\t<footer class=\\\"blockquote-footer\\\">MEAN (software bundle) <cite title=\\\"Wikipedia link to MEAN\\\"><a href=\\\"https://en.wikipedia.org/wiki/MEAN_(software_bundle)\\\">Wikipedia</a></cite></footer>\\n\\t</blockquote>\\n\\n\\t<h5>What is Bootstrap?</h5>\\n\\n\\t\\t<blockquote class=\\\"blockquote\\\">\\n  \\t\\t<p class=\\\"mb-0\\\"><em>\\\"Bootstrap is a free and open-source front-end framework for designing websites and web applications. It contains HTML- and CSS-based design templates for typography, forms, buttons, navigation and other interface components, as well as optional JavaScript extensions. Unlike many earlier web frameworks, it concerns itself with front-end development only.\\\"</em></p>\\n  \\t\\t<footer class=\\\"blockquote-footer\\\">Bootstrap (front-end framework) <cite title=\\\"Wikipedia link to Bootstrap\\\"><a href=\\\"https://en.wikipedia.org/wiki/Bootstrap_(front-end_framework)\\\">Wikipedia</a></cite></footer>\\n\\t</blockquote>\\n\\n\\t<h5>Who made this?</h5>\\n\\n\\t\\t<p>This application was made by Ricky Molnar. You can download a copy or view the source code on my <a href=\\\"https://github.com/rmolnar/Login-Template\\\">GitHub</a> account. This application is <a href=\\\"https://www.fsf.org/about/what-is-free-software\\\">free software</a> made available for public or private use.</p>\\n\\t\\t<p>You can email me at richardamolnar@gmail.com or follow me on twitter at <a href=\\\"https://twitter.com/ricky_molnar\\\">@ricky_molnar</a>.</p>\\n\\n\\t<h3 id=\\\"timeline-title\\\">Development timeline:</h3>\\n\\t<div class=\\\"list-group\\\">\\n\\t  <div class=\\\"list-group-item list-group-item-primary flex-column align-items-start\\\">\\n\\t    <div class=\\\"d-flex w-100 justify-content-between\\\">\\n\\t      <h5 class=\\\"mb-1\\\">Application online!</h5>\\n\\t      <small>August 24th, 2018</small>\\n\\t    </div>\\n\\t    <p class=\\\"mb-1\\\">The first prototype was completed and uploaded to a dedicated Linux server running on CentOS.<br/>The initial version implemented the following features:</p>\\n\\t    <small>\\n\\t    \\t<ul class=\\\"timeline-list\\\">\\n\\t    \\t\\t<li>Set initial layout to the Bootswatch <a href=\\\"https://bootswatch.com/lux/\\\">Lux</a> theme</li>\\n\\t    \\t\\t<li>Home, profile, dashboard, login, and registration pages</li>\\n\\t    \\t\\t<li>Front-end view routing and navigation in Angular 6</li>\\n\\t    \\t\\t<li>Highlighting of active page in navbar</li>\\n\\t    \\t\\t<li>Registration and login forms</li>\\n\\t    \\t\\t<li>Email format and form completion validation</li>\\t    \\t\\t\\n\\t    \\t\\t<li>Get and post requests to backend Express server</li>\\n\\t    \\t\\t<li>User authentication</li>\\n\\t    \\t\\t<li>Password encryption</li>\\n\\t    \\t\\t<li>Local storage of id tokens to remember users</li>\\n\\t    \\t\\t<li>Authorization to prevent users without a valid token from accessing certain pages</li>\\n\\t    \\t\\t<li>Get user information for profile page</li>\\n\\t    \\t\\t<li>Flash notifications to communicate with the user</li>\\n\\t    \\t</ul>\\n\\t    </small>\\n\\t  </div>\\n\\n\\t  <div class=\\\"list-group-item list-group-item-primary flex-column align-items-start\\\">\\n\\t    <div class=\\\"d-flex w-100 justify-content-between\\\">\\n\\t      <h5 class=\\\"mb-1\\\">First major update</h5>\\n\\t      <small>September 7th, 2018</small>\\n\\t    </div>\\n\\t    <p class=\\\"mb-1\\\">I have been actively developing this application since the initial upload. A few features have been added, but most of the changes are content and styling.</p>\\n\\t    <small>\\n\\t    \\t<ul class=\\\"timeline-list\\\">\\n\\t    \\t\\t<li>The first version of the homepage is now uploaded. I added the introduction, short description, and the development timeline that you're reading now!</li>\\n\\t    \\t\\t<li>Changed login from being based on username to being based on email address</li>\\n\\t    \\t\\t<li>Added a new guard service to redirect users who are already logged in to the dashboard if they attempt to access the login or registration pages</li>\\n\\t    \\t\\t<li>Completely reworked the login and registration forms so they look a lot nicer</li>\\n\\t    \\t\\t<li>Styled the site a bit and added the nifty dark gray graident background</li>\\n\\t    \\t\\t<li>Changed the user info from full name to first and last name, then completely threw away the name part of the user info because I really don't care what your name is</li>\\n\\t    \\t\\t<li>Added cute snippet of info to the dashboard page</li>\\n\\t    \\t\\t<li>Added Font Awesome icons to navigation links</li>\\n\\t    \\t</ul>\\n\\t    </small>\\n\\t  </div>\\n\\n\\t  <div class=\\\"list-group-item list-group-item-secondary flex-column align-items-start\\\">\\n\\t    <div class=\\\"d-flex w-100 justify-content-between\\\">\\n\\t      <h5 class=\\\"mb-1\\\">Further development</h5>\\n\\t      <small class=\\\"text-muted\\\">Soon...</small>\\n\\t    </div>\\n\\t    <p class=\\\"mb-1\\\">The following features are either planned or currently in development and not yet implemented.</p>\\n\\t    <small>\\n\\t    \\t<ul class=\\\"timeline-list\\\">\\n\\t    \\t\\t<li>Mobile menu functionality and mobile styling</li>\\n\\t    \\t\\t<li>OAuth 2.0 protocol validation (login via social media)</li>\\n\\t    \\t\\t<li>Case insensitive user info</li>\\n\\t    \\t\\t<li>User info editing via profile page</li>\\n\\t    \\t\\t<li>Check if username or email is already taken</li>\\n\\t    \\t\\t<li>Email and password confirmation upon registration</li>\\n\\t    \\t\\t<li>Account verification via email</li>\\n\\t    \\t\\t<li>Password requirements</li>\\n\\t    \\t\\t<li>Prevent blank (but not null) info upon registration</li>\\n\\t    \\t\\t<li>Clear local storage if id token has been tampered with</li>\\n\\t    \\t\\t<li>Improved notification system</li>\\n\\t    \\t</ul>\\n\\t    </small>\\n\\t  </div>\\n\\t</div>\\n\\n\\t<p id=\\\"register-invite\\\">Register or login to begin</p> \\n\\t\\n\\t<div>\\n\\t\\t<a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/register']\\\">Register</a> <a class=\\\"btn btn-secondary\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\n\\t</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"#form-title {\\r\\n    padding-top: 10px;\\r\\n    padding-bottom: 10px;\\r\\n}\\r\\n\\r\\n.main{\\r\\n \\tmargin: 50px 15px;\\r\\n}\\r\\n\\r\\n.form-group, label{\\r\\n\\tmargin-bottom: 15px;\\r\\n}\\r\\n\\r\\ninput::-webkit-input-placeholder {\\r\\n    font-size: 11px;\\r\\n}\\r\\n\\r\\n.form-control {\\r\\n    height: auto !important;\\r\\n    padding: 8px 12px !important;\\r\\n}\\r\\n\\r\\n.input-group {\\r\\n    box-shadow: 0px 2px 5px 0px rgba(0,0,0,0.21) !important;\\r\\n}\\r\\n\\r\\n#button {\\r\\n    width: 50%;\\r\\n    margin-left: 25%;\\r\\n    margin-right: 25%;\\r\\n    margin-top: 5px;    \\r\\n    margin-top: 28px;\\r\\n    padding: 6px 12px;\\r\\n}\\r\\n\\r\\n.main-center{\\r\\n \\tmargin-top: 30px;\\r\\n \\tmargin: 0 auto;\\r\\n    width: 500px;\\r\\n    padding: 10px 40px;\\r\\n\\tbackground:#bbb;\\r\\n    color: #fff;\\r\\n    text-shadow: none;\\r\\n box-shadow: 0px 3px 5px 0px rgba(0,0,0,0.31);\\r\\n}\"","module.exports = \"<div class=\\\"row main\\\">\\n\\t<div class=\\\"container\\\">\\t\\n\\t\\t<div class=\\\"main-center\\\">\\n\\t\\t<h2 id=\\\"form-title\\\">Login</h2>\\t\\t\\t\\n\\t\\t\\t<form (submit)=\\\"onLoginSubmit()\\\">\\n\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"email\\\" class=\\\"cols-sm-2 control-label\\\">Email</label>\\n\\t\\t\\t\\t\\t<div class=\\\"cols-sm-10\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t<input [(ngModel)]=\\\"email\\\" type=\\\"text\\\" required=\\\"required\\\" class=\\\"form-control\\\" name=\\\"email\\\" id=\\\"email\\\"  placeholder=\\\"Enter your Email\\\"/>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"password\\\" class=\\\"cols-sm-2 control-label\\\">Password</label>\\n\\t\\t\\t\\t\\t<div class=\\\"cols-sm-10\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t<input [(ngModel)]=\\\"password\\\" type=\\\"password\\\" required=\\\"required\\\" class=\\\"form-control\\\" name=\\\"password\\\" id=\\\"password\\\"  placeholder=\\\"Enter your Password\\\"/>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"form-group \\\">\\n\\t\\t\\t\\t\\t<input type=\\\"submit\\\" id=\\\"button\\\" class=\\\"btn btn-primary btn-lg btn-block\\\" value=\\\"Login\\\">\\n\\t\\t\\t\\t</div>\\t\\t\\t\\n\\t\\t\\t</form>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { ValidateService } from '../../services/validate.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n\temail: String;\n\tpassword: String;\n\n  constructor(\n  \tprivate authService: AuthService,\n  \tprivate router: Router,\n  \tprivate flashMessagesService: FlashMessagesService,\n    private validateService: ValidateService\n  \t) { }\n\n  ngOnInit() {\n  }\n\n  onLoginSubmit(){\n  \tconst user = {\n  \t\temail: this.email,\n  \t\tpassword: this.password\n  \t}\n\n    // If all info is entered, attempt to login\n    if (this.email && this.password){\n    \tthis.authService.authenticateUser(user).subscribe(data => {\n    \t\tif((data as any).success){\n    \t\t\tthis.authService.storeUserData((data as any).token, (data as any).user);\n     \t\t\tthis.flashMessagesService.show('Successfully logged in.', {cssClass: 'alert-success', timeout: 3000}); \t\t\t\n     \t\t\tthis.router.navigate(['dashboard']);\n    \t\t} else {\n    \t\t\tthis.flashMessagesService.show((data as any).msg, {cssClass: 'alert-danger', timeout: 3000});\n    \t\t\tthis.router.navigate(['login']);\n    \t\t}\n    \t});\n    } else {\n       this.flashMessagesService.show('Please enter email and password.', {cssClass: 'alert-danger', timeout: 3000});\n       this.router.navigate(['login']);\n    }\n  }\n}\n","module.exports = \".bg-dark {\\r\\n\\tbackground-color: #34363a !important;\\r\\n}\\r\\n\\r\\n.navbar-right {\\r\\n\\tmargin-right: 20%;\\r\\n}\\r\\n\\r\\ni {\\r\\n\\tpadding-right: 3px;\\r\\n\\tfont-size: 14px;\\r\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-default navbar-expand-md navbar-dark bg-dark mb-4\\\">\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Login Template</a>\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarCollapse\\\" aria-controls=\\\"navbarCollapse\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarCollapse\\\">\\n\\n        <!-- Left navbar  -->\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n          <li [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] =\\\"{exact:true}\\\" class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/']\\\"><i class=\\\"fas fa-home\\\"></i> Home</a>\\n          </li>\\n        </ul>\\n\\n        <!-- Right navbar  -->\\n        <ul class=\\\"navbar-nav navbar-right \\\">\\n          <li *ngIf=\\\"!authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] =\\\"{exact:true}\\\" class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/login']\\\"><i class=\\\"fas fa-sign-in-alt\\\"></i> Login</a>\\n          </li>\\n          \\n          <li *ngIf=\\\"!authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] =\\\"{exact:true}\\\" class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/register']\\\"><i class=\\\"fas fa-user-plus\\\"></i> Register</a>\\n          </li>\\n\\n          <li *ngIf=\\\"authService.loggedIn()\\\" class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" href=\\\"#\\\" (click)=\\\"onLogoutClick()\\\"><i class=\\\"fas fa-sign-out-alt\\\"></i> Logout</a>\\n          </li>\\n\\n          <li *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] =\\\"{exact:true}\\\" class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\"><i class=\\\"fab fa-node-js\\\"></i> Dashboard</a>\\n          </li>\\n\\n          <li *ngIf=\\\"authService.loggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] =\\\"{exact:true}\\\" class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\"><i class=\\\"fas fa-user-cog\\\"></i> Profile</a>\\n          </li>\\n        </ul>\\n\\n      </div>\\n    </nav>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n  \tprivate authService: AuthService,\n  \tprivate router: Router,\n  \tprivate flashMessagesService: FlashMessagesService\n  \t) { }\n\n  ngOnInit() {\n  }\n\n  onLogoutClick(){\n  \tthis.authService.logout();\n  \tthis.flashMessagesService.show('You are logged out', {\n  \t\tcssClass: 'alert-success',\n  \t\ttimeout: 3000\n  \t});\n  \tthis.router.navigate(['/']);\n  \treturn false;\n  }\n\n}\n","module.exports = \".page-header {\\r\\n\\tcolor: white;\\r\\n}\\r\\n\\r\\n.list-group-item {\\r\\n\\tbackground-color: #333;\\r\\n\\tcolor: white;\\r\\n\\twidth: 60%;\\r\\n\\tmargin-left: 20%;\\r\\n\\tmargin-right: 20%;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"user\\\">\\n\\t<h2 class=\\\"page-header\\\">Profile</h2>\\n\\t<ul class=\\\"list-group\\\">\\n\\t\\t<li class=\\\"list-group-item\\\">Username: {{user.username}}</li>\\n\\t\\t<li class=\\\"list-group-item\\\">Email: {{user.email}}</li>\\n\\t</ul>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\n\n\nexport class ProfileComponent implements OnInit {\n\n\tuser: Object;\n\n  constructor(\n  \tprivate authService: AuthService,\n  \tprivate router: Router\n  \t) { }\n\n  ngOnInit() {\n  \tthis.authService.getProfile().subscribe(profile => {\n  \t\tthis.user = (profile as any).user;\n  \t},\n  \terr => {\n  \t\tconsole.log(err);\n  \t\treturn false;\n  \t});\n  }\n\n}\n","module.exports = \"#form-title {\\r\\n    padding-top: 10px;\\r\\n    padding-bottom: 10px;\\r\\n}\\r\\n\\r\\n.main{\\r\\n \\tmargin: 50px 15px;\\r\\n}\\r\\n\\r\\n.form-group, label{\\r\\n\\tmargin-bottom: 15px;\\r\\n}\\r\\n\\r\\ninput::-webkit-input-placeholder {\\r\\n    font-size: 11px;\\r\\n}\\r\\n\\r\\n.form-control {\\r\\n    height: auto !important;\\r\\n    padding: 8px 12px !important;\\r\\n}\\r\\n\\r\\n.input-group {\\r\\n    box-shadow: 0px 2px 5px 0px rgba(0,0,0,0.21) !important;\\r\\n}\\r\\n\\r\\n#button {\\r\\n    width: 50%;\\r\\n    margin-left: 25%;\\r\\n    margin-right: 25%;\\r\\n    margin-top: 5px;    \\r\\n    margin-top: 28px;\\r\\n    padding: 6px 12px;\\r\\n}\\r\\n\\r\\n.main-center{\\r\\n \\tmargin-top: 30px;\\r\\n \\tmargin: 0 auto;\\r\\n    width: 500px;\\r\\n    padding: 10px 40px;\\r\\n\\tbackground:#bbb;\\r\\n    color: #fff;\\r\\n    text-shadow: none;\\r\\n box-shadow: 0px 3px 5px 0px rgba(0,0,0,0.31);\\r\\n}\"","module.exports = \"\\t<div class=\\\"row main\\\">\\n\\t<div class=\\\"container\\\">\\t\\n\\t\\t<div class=\\\"main-center\\\">\\n\\t\\t<h2 id=\\\"form-title\\\">Register</h2>\\t\\t\\t\\n\\t\\t\\t<form (submit)=\\\"onRegisterSubmit()\\\">\\n\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"username\\\" class=\\\"cols-sm-2 control-label\\\">Username</label>\\n\\t\\t\\t\\t\\t<div class=\\\"cols-sm-10\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t<input [(ngModel)]=\\\"username\\\" type=\\\"text\\\" required=\\\"required\\\" class=\\\"form-control\\\" name=\\\"username\\\" id=\\\"username\\\"  placeholder=\\\"Enter your Username\\\"/>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"email\\\" class=\\\"cols-sm-2 control-label\\\">Your Email</label>\\n\\t\\t\\t\\t\\t<div class=\\\"cols-sm-10\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t<input [(ngModel)]=\\\"email\\\" type=\\\"text\\\" required=\\\"required\\\" class=\\\"form-control\\\" name=\\\"email\\\" id=\\\"email\\\"  placeholder=\\\"Enter your Email\\\"/>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"email\\\" class=\\\"cols-sm-2 control-label\\\">Confirm Email</label>\\n\\t\\t\\t\\t\\t<div class=\\\"cols-sm-10\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" required=\\\"required\\\" class=\\\"form-control\\\" name=\\\"confirm-email\\\" id=\\\"confirm-email\\\"  placeholder=\\\"Confirm your Email\\\"/>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"password\\\" class=\\\"cols-sm-2 control-label\\\">Password</label>\\n\\t\\t\\t\\t\\t<div class=\\\"cols-sm-10\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t<input [(ngModel)]=\\\"password\\\" type=\\\"password\\\" required=\\\"required\\\" class=\\\"form-control\\\" name=\\\"password\\\" id=\\\"password\\\"  placeholder=\\\"Enter your Password\\\"/>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t<label for=\\\"confirm\\\" class=\\\"cols-sm-2 control-label\\\">Confirm Password</label>\\n\\t\\t\\t\\t\\t<div class=\\\"cols-sm-10\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"password\\\" required=\\\"required\\\" class=\\\"form-control\\\" name=\\\"confirm-password\\\" id=\\\"confirm-password\\\"  placeholder=\\\"Confirm your Password\\\"/>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"form-group \\\">\\n\\t\\t\\t\\t\\t<input type=\\\"submit\\\" id=\\\"button\\\" class=\\\"btn btn-primary btn-lg btn-block\\\" value=\\\"Submit\\\">\\n\\t\\t\\t\\t</div>\\t\\t\\t\\n\\t\\t\\t</form>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../services/validate.service';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\n\nexport class RegisterComponent implements OnInit {\n\n\tusername: String;\n\temail: String;\n\tpassword: String;\n\n  constructor(\n    private validateService: ValidateService,\n    private flashMessagesService: FlashMessagesService,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n\n  onRegisterSubmit(){\n  \tconst user = {\n  \t\temail: this.email,\n  \t\tusername: this.username,\n  \t\tpassword: this.password\n  \t}\n\n  \t// Make sure user entered all fields\n  \tif(!this.validateService.validateRegister(user)){\n  \t\tthis.flashMessagesService.show('Please fill in all fields.', {cssClass: 'alert-danger', timeout: 3000});\n  \t\treturn false;\n  \t}\n\n  \t// Make sure email is in correct format\n  \tif(!this.validateService.validateEmail(user.email)){\n  \t\tthis.flashMessagesService.show('Please enter a valid email address.', {cssClass: 'alert-danger', timeout: 3000});\n  \t\treturn false;\n  \t}\n\n    // Register user\n    this.authService.registerUser(user).subscribe(data => {\n      if((data as any).success){\n      this.flashMessagesService.show('Successfully registered user!', {cssClass: 'alert-success', timeout: 3000});\n      this.router.navigate(['/login']);\n      } else {\n      this.flashMessagesService.show('Error in user registration.', {cssClass: 'alert-danger', timeout: 3000});\n      this.router.navigate(['/register']);\n      }\n    });\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n\r\n@Injectable() \r\n\r\nexport class AuthGuard implements CanActivate{\r\n\tconstructor(private authService: AuthService, private router: Router, private flashMessagesService: FlashMessagesService){\r\n\r\n\t}\r\n\r\n\tcanActivate() {\r\n\t\tif(this.authService.loggedIn()){\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\tthis.flashMessagesService.show('You must be logged in.', {cssClass: 'alert-danger', timeout: 3000});\r\n\t\t\tthis.router.navigate(['/login']);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n\r\n@Injectable() \r\n\r\nexport class LoggedInGuard implements CanActivate{\r\n\tconstructor(private authService: AuthService, private router: Router, private flashMessagesService: FlashMessagesService){\r\n\r\n\t}\r\n\r\n\tcanActivate() {\r\n\t\tif(this.authService.loggedIn()){\r\n\t\t\tthis.flashMessagesService.show('You are already logged in.', {cssClass: 'alert-danger', timeout: 3000});\r\n\t\t\tthis.router.navigate(['/dashboard']);\r\n\t\t\treturn false;\t\t\t\r\n\t\t} else {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt'\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n\n\tauthToken: any;\n\tuser: any;\n\n  constructor(private http: HttpClient) { }\n\n\tregisterUser(user){\n\t    let headers= new HttpHeaders({\n\t    \t'Content-Type': 'application/json'\n\t    });\n\t    // Change to localhost:3000 for development and rickymolnar.com for production\n\t    return this.http.post('http://localhost:3000/users/register', user, {headers: headers});\n\t  }\n\n\tauthenticateUser(user){\n\t    let headers= new HttpHeaders({\n\t    \t'Content-Type': 'application/json'\n\t    });\n\t    // Change to localhost:3000 for development and rickymolnar.com for production\n\t    return this.http.post('http://localhost:3000/users/authenticate', user, {headers: headers});\n\t}\n\n \tgetProfile() {\n\t    this.loadToken();\n\t\tlet headers = new HttpHeaders({\n\t\t      'Authorization': this.authToken,\n\t\t      'Content-Type':'application/json'\n\t\t});﻿\n\t    // Change to localhost:3000 for development and rickymolnar.com for production\n\t    return this.http.get('http://localhost:3000/users/profile', {headers: headers});\n\t}\n\n\tstoreUserData(token, user){\n\t\tlocalStorage.setItem('id_token', token);\n\t\tlocalStorage.setItem('user', JSON.stringify(user));\n\t\tthis.authToken = token;\n\t\tthis.user = user;\n\t}\n\n\tloadToken(){\n\t\tconst token = localStorage.getItem('id_token');\n\t\tthis.authToken = token;\n\t}\n\n\tloggedIn(){\n \t    this.loadToken();\n   \t\tif (this.authToken == undefined ){\n    \t\treturn false\n   \t\t} else {\n \t\t\tconst helper = new JwtHelperService();\n   \t\t\treturn !helper.isTokenExpired(this.authToken);\n   \t\t}\n  \t}\n\n\tlogout(){\n\t\tthis.authToken = null;\n\t\tthis.user = null;\n\t\tlocalStorage.clear();\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  // Verify that all registration information has been entered\n  validateRegister(user) {\n  \tif(user.email == undefined || user.username == undefined || user.password == undefined){\n  \t\treturn false;\n  \t} else {\n  \t\treturn true;\n  \t}\n  }\n\n  // Make sure that the email is in the correct format\n  validateEmail(email) {\n  \tconst re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  \treturn re.test(email);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}